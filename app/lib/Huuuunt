#!/usr/bin/ruby

# 主程序入口

# 运行命令解释器，等待命令输入。

#Usage: Huuuunt [global options] COMMAND [options] [ARGS]
#
#Available commands:
#    help            Provide help for individual commands
#    match           赛事名称等数据处理程序
#      export        赛事名称等数据从数据库中导出到Excel
#      import        赛事名称等数据从Excel中导入到数据库
#    version         Show the version of the program
#
#Global options:
#        --verbose                    输出详细信息
#    -h, --help                       Show help
#    -v, --version                    Show the version of the program


########################
# require文件加载路径设置 #
########################
$LOAD_PATH.unshift(File.dirname(File.expand_path("./", __FILE__)))

require 'rubygems'
require 'cmdparse'
#require 'net/http'
#require 'iconv'
#require 'date'
#require 'hpricot'

require 'cmd/match_cmd'
require 'cmd/team_cmd'
require 'cmd/result_cmd'
require 'cmd/europe_cmd'
require 'cmd/asia_cmd'
require 'cmd/schedule_cmd'
require 'cmd/schedule_gooooal_cmd'
require 'cmd/score_cmd'

require 'util/huuuunt_log'

###################
# CmdParse相关设置 #
###################
cmd = CmdParse::CommandParser.new(true, true)
cmd.program_name = "Huuuunt"
cmd.program_version = [0, 0, 1]
cmd.options = CmdParse::OptionParserWrapper.new do |opt|
  opt.separator "Global options:"
  opt.on("--verbose", "输出详细信息") {|t| $verbose = true }
end
cmd.add_command(CmdParse::HelpCommand.new)
cmd.add_command(CmdParse::VersionCommand.new)

# 所有命令列表
commands = {
  "MatchCmd" => ["MatchImportCmd", "MatchExportCmd", "MatchCheckCmd"],
  "TeamCmd" => ["TeamImportCmd", "TeamExportCmd", "TeamCheckCmd"],
  "ResultCmd" => ["ResultDownloadCmd", "ResultPreprocessCmd", "ResultImportCmd"],
  "EuropeCmd" => ["EuropeDownloadCmd", "EuropePreprocessCmd", "EuropeCheckResultCmd", "EuropeImportCmd"],
  "AsiaCmd" => ["AsiaDownloadCmd", "AsiaPreprocessCmd", "AsiaCheckResultCmd", "AsiaImportCmd"],
  "ScheduleCmd" => ["ScheduleDownloadCmd", "SchedulePreprocessCmd", "ScheduleImportCmd", "ScheduleUpdateCmd"],
  # Huuuunt schedule-gooooal preprocess 2007 1 2 4
  # Huuuunt schedule-gooooal import 2007 1 2 4
  "ScheduleGooooalCmd" => ["ScheduleGooooalPreprocessCmd", "ScheduleGooooalImportCmd"],
  # Huuuunt score calc  2007 1 2 4
  # Huuuunt score calc  2007
  "ScoreCmd" => ["ScoreCalcCmd", "ScoreCheckCmd", "SoreAsiaCalcCmd", "ScoreAsiaCheckCmd"]
}

commands.each do |m_cmd, s_cmds|
  src = <<-END_SRC
    new_cmd = #{m_cmd}.new
    cmd.add_command(new_cmd)
  END_SRC
  eval src
  s_cmds.each do |s_cmd|
    src = "new_cmd.add_command(#{s_cmd}.new)"
    eval src
  end
end

## 赛事名称等数据处理CMD
#match_cmd = MatchCmd.new
#match_cmd.add_command(MatchImportCmd.new)
#match_cmd.add_command(MatchExportCmd.new)
#
#cmd.add_command(match_cmd)

# CmdParse开始解析命令
cmd.parse
